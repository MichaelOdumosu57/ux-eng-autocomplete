{"version":3,"sources":["data/index.ts","data/sources.ts","data/functions.ts","data/destinations.ts","data/documentation.ts","data/shortcuts.ts","hooks/use-query.ts","components/Search.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["mockData","category","type","imgUrl","name","connectedTo","url","path","getData","query","Promise","resolve","reject","Math","floor","random","status","setTimeout","data","filter","item","toLowerCase","indexOf","useQuery","useState","setData","loading","setLoading","success","setSucess","useEffect","then","response","catch","Search","eDB","value","setValue","results","input","onChange","e","target","Pane","border","height","display","flexDirection","borderRadius","SearchInput","width","placeholder","map","i","includes","undefined","push","Object","entries","x","items","borderBottom","Heading","margin","paddingTop","paddingLeft","toUpperCase","y","imgDims","alignItems","style","src","paddingX","paddingY","Strong","Text","App","flexGrow","justifyContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.027a2b5b.chunk.js","sourcesContent":["import {\r\n  Source,\r\n  Destination,\r\n  Function,\r\n  Shortcut,\r\n  Documentation,\r\n} from \"../types\";\r\nimport { mockSources } from \"./sources\";\r\nimport { mockDestinations } from \"./destinations\";\r\nimport { mockFunctions } from \"./functions\";\r\nimport { mockShortcuts } from \"./shortcuts\";\r\nimport { mockDocumentation } from \"./documentation\";\r\n\r\nexport type Item = Source | Destination | Function | Shortcut | Documentation;\r\n\r\nconst mockData: Item[] = [\r\n  ...mockSources,\r\n  ...mockFunctions,\r\n  ...mockDestinations,\r\n  ...mockDocumentation,\r\n  ...mockShortcuts,\r\n];\r\n\r\nexport default mockData;\r\n","import { Source } from \"../types\";\r\n\r\nexport const mockSources: Source[] = [\r\n  {\r\n    category: \"source\",\r\n    type: \"Android\",\r\n    imgUrl: \"https://cdn.filepicker.io/api/file/Nrc1mGPT4SDoxDC1inUA\",\r\n    name: \"Android 2\",\r\n  },\r\n  {\r\n    category: \"source\",\r\n    type: \"Android\",\r\n    imgUrl: \"https://cdn.filepicker.io/api/file/Nrc1mGPT4SDoxDC1inUA\",\r\n    name: \"android-test-source\",\r\n  },\r\n  {\r\n    category: \"source\",\r\n    type: \"Javascript\",\r\n    imgUrl: \"https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd\",\r\n    name: \"Production Source Test\",\r\n  },\r\n  {\r\n    category: \"source\",\r\n    type: \"Javascript\",\r\n    imgUrl: \"https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd\",\r\n    name: \"Testing Playground [DEV]\",\r\n  },\r\n];\r\n","import { Function } from \"../types\";\r\n\r\nexport const mockFunctions: Function[] = [\r\n  {\r\n    category: \"function\",\r\n    name: \"Data Function\",\r\n    imgUrl: \"https://cdn.filepicker.io/api/file/RmPmpcBTQZKaFeGQrdG5\",\r\n  },\r\n  {\r\n    category: \"function\",\r\n    name: \"Marketing Transformation\",\r\n    imgUrl: \"https://cdn.filepicker.io/api/file/RmPmpcBTQZKaFeGQrdG5\",\r\n  },\r\n];\r\n","import { Destination } from \"../types\";\r\n\r\nexport const mockDestinations: Destination[] = [\r\n  {\r\n    category: \"destination\",\r\n    imgUrl: \"https://cdn.filepicker.io/api/file/R1EKddJ1SnGECiHtdUlY\",\r\n    name: \"Prod S3 Bucket\",\r\n    connectedTo: {\r\n      name: \"android-test-source\",\r\n    },\r\n  },\r\n  {\r\n    category: \"destination\",\r\n    imgUrl: \"https://cdn.filepicker.io/api/file/R1EKddJ1SnGECiHtdUlY\",\r\n    name: \"Stage Analytics test\",\r\n    connectedTo: {\r\n      name: \"android-test-source\",\r\n    },\r\n  },\r\n  {\r\n    category: \"destination\",\r\n    imgUrl: \"https://cdn.filepicker.io/api/file/FBoLevGrQECujcvAjU9g\",\r\n    name: \"Messaging Webhook\",\r\n    connectedTo: {\r\n      name: \"Testing Playground [DEV]\",\r\n    },\r\n  },\r\n  {\r\n    category: \"destination\",\r\n    imgUrl: \"https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO\",\r\n    name: \"Amplitude\",\r\n    connectedTo: {\r\n      name: \"Testing Playground [DEV]\",\r\n    },\r\n  },\r\n];\r\n","import { Documentation } from \"../types\";\r\n\r\nexport const mockDocumentation: Documentation[] = [\r\n  {\r\n    category: \"documentation\",\r\n    name: \"Find your Analytics Write Key\",\r\n    url: \"some/external/url\",\r\n  },\r\n  {\r\n    category: \"documentation\",\r\n    name: \"Enabling PII masking for your workspace\",\r\n    url: \"some/external/url\",\r\n  },\r\n  {\r\n    category: \"documentation\",\r\n    name: \"Getting started with Personas\",\r\n    url: \"some/external/url\",\r\n  },\r\n  {\r\n    category: \"documentation\",\r\n    name: \"Validate incoming data using Protoclol\",\r\n    url: \"some/external/url\",\r\n  },\r\n  {\r\n    category: \"documentation\",\r\n    name: \"Configuring your Braze integration \",\r\n    url: \"some/external/url\",\r\n  },\r\n];\r\n","import { Shortcut } from \"../types\";\r\n\r\nexport const mockShortcuts: Shortcut[] = [\r\n  {\r\n    category: \"shortcut\",\r\n    name: \"Protocols Transformations\",\r\n    path: \"/some/test/path\",\r\n  },\r\n  {\r\n    category: \"shortcut\",\r\n    name: \"Workspace Settings\",\r\n    path: \"/some/test/path\",\r\n  },\r\n  {\r\n    category: \"shortcut\",\r\n    name: \"Visual Tagger\",\r\n    path: \"/some/test/path\",\r\n  },\r\n  {\r\n    category: \"shortcut\",\r\n    name: \"Source Overview\",\r\n    path: \"/some/test/path\",\r\n  },\r\n  {\r\n    category: \"shortcut\",\r\n    name: \"Destination Overview\",\r\n    path: \"/some/test/path\",\r\n  },\r\n];\r\n","import { useEffect, useState } from \"react\";\r\nimport data, { Item } from \"../data\";\r\n\r\nconst filter = (query: string): Item[] => {\r\n  return data!.filter((item) => {\r\n    return item.name.toLowerCase().indexOf(query.toLowerCase()) !== -1;\r\n  });\r\n};\r\n\r\nconst getData = (query: string): Promise<Item[]> => {\r\n  return new Promise((resolve,reject) => {\r\n\r\n    // allow for a network error to make the API fail\r\n    let mockFail:Boolean = Math.floor(Math.random()*100) % 2 === 1  ? true:false\r\n    // \r\n    \r\n    if(!mockFail){\r\n      setTimeout(() => {\r\n        resolve(filter(query));\r\n      }, 200);\r\n    }\r\n\r\n    else{\r\n      reject({\r\n        status:404\r\n      })\r\n    }\r\n\r\n  });\r\n};\r\n\r\ntype MyData = null | Item[] | {status:number} \r\nexport interface Output {\r\n  data: MyData;\r\n  loading: boolean;\r\n}\r\n\r\nconst useQuery = ({ query = \"\" }: { query: string }): Output => {\r\n  const [data, setData]:        [MyData,Function] = useState<MyData>(null);\r\n  const [loading, setLoading]:  [boolean,Function] = useState<boolean>(false);\r\n  const [success,setSucess]:    [number,Function] = useState<number>(1)\r\n\r\n  // this can only fire once if the data is static I dont need to bother the backend\r\n    \r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getData(query)\r\n    .then((response) => {\r\n      setData(response);\r\n      setLoading(false);\r\n    })\r\n    .catch((response)=>{\r\n      setData(response);\r\n      setLoading(false);\r\n      setSucess(Math.random())\r\n    })\r\n  }, [success]);\r\n  // \r\n\r\n  return {\r\n    data,\r\n    loading,\r\n  };\r\n};\r\n\r\nexport default useQuery;\r\n","\r\nimport React, { useState, useEffect, ChangeEvent } from \"react\";\r\nimport { Pane, SearchInput,Heading,Strong,Text } from \"evergreen-ui\";\r\nimport useQuery,{Output} from \"../hooks/use-query\"\r\nimport { Item } from \"../data/index\"\r\nimport {SamePropTypeOnly} from '../lib'\r\n\r\ninterface Props { }\r\n\r\n\r\nconst Search: React.FC<Props> = () => {\r\n\r\n\r\n\t// css vars if you will\r\n\tlet eDB:string =\"1px solid #E6E8F0\" // evergreenDefaultBorder becuase I could not get the defaults on borderBottom only\r\n\t// \r\n\r\n\t// gather end user input data\r\n\tlet [value, setValue]:[string,Function] = useState<string>(\"\")\t\r\n\tlet data:Output =  useQuery({ query: \"\" })\r\n\tlet results: SamePropTypeOnly<Item[]> = {}\r\n\t// \r\n\r\n\tlet input = {\r\n\t\tonChange: (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\tsetValue(e.target.value);\r\n\t\t}\r\n\t}\r\n\r\n\t// your code here!\r\n\treturn (\r\n\t\t<Pane border=\"default\" height=\"auto\" display=\"flex\" flexDirection=\"column\" borderRadius=\"10px\">\r\n\r\n\t\t\t<SearchInput width={540} placeholder=\"\" onChange={input.onChange} />\r\n\t\t\t{\r\n\t\t\t\t(()=>{\r\n\r\n\t\t\t\t\tresults = {}\r\n\t\t\t\t\t// if the data is not available due to networking issues reurn\r\n\t\t\t\t\tif(data.data === null){\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif((data.data as {status:number}).status === 404){\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t};\r\n\t\t\t\t\t//  \r\n\r\n\t\t\t\t\t(data.data as Item[])?.map((item: Item, i) => {\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif ([\"source\", \"destination\"].includes(item.category)) {\r\n\t\t\t\t\t\t\titem.category += \"s\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( item.name.toLowerCase().includes(value.toLowerCase())){\r\n\t\t\t\t\t\t\tif (results[item.category] === undefined) {\r\n\t\t\t\t\t\t\t\tresults[item.category] = []\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresults[item.category].push(item)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\treturn Object.entries(results).map((x, i) => {\r\n\t\t\t\t\t\tlet category: string = x[0]\r\n\t\t\t\t\t\tlet items: Item[] | any[] = x[1]\r\n\t\t\t\t\t\treturn <Pane  >\r\n\t\t\r\n\t\t\t\t\t\t\t<Pane borderBottom={eDB}>\r\n\t\t\t\t\t\t\t\t<Heading margin=\"0\" paddingTop=\"20px\" paddingLeft=\"20px\" >{category.toUpperCase()}</Heading>\r\n\t\t\t\t\t\t\t</Pane>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\titems.map((item, y) => {\r\n\t\t\t\t\t\t\t\t\tlet imgDims: string = \"30px\"\r\n\t\t\t\t\t\t\t\t\treturn <Pane display=\"flex\" alignItems=\"center\"  borderBottom={eDB}>\r\n\t\t\t\t\t\t\t\t\t\t{item.imgUrl && <img style={{ height: imgDims, width: imgDims, margin: \"10px 10px 10px 25px\" }} src={item.imgUrl} />}\r\n\t\t\t\t\t\t\t\t\t\t<Pane display=\"flex\" flexDirection=\"column\" paddingX={!item.imgUrl ? \"25px\" : \"5px\"} paddingY={!item.imgUrl ? \"15px\" : \"5px\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Strong margin=\"0\">{item.name}</Strong>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* for scalalbility instead of a simple equals add targets to the array */}\r\n\t\t\t\t\t\t\t\t\t\t\t{[\"sources\"].includes(item.category) && <Text >{item.type}</Text>}\r\n\t\t\t\t\t\t\t\t\t\t\t{[\"destinations\"].includes(item.category) && <Text >Receiving From {item.connectedTo.name}</Text>}\r\n\t\t\t\t\t\t\t\t\t\t</Pane>\r\n\t\t\t\t\t\t\t\t\t</Pane>\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Pane>\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t})()\r\n\t\t\t\r\n\t\t\t}\r\n\t\t</Pane>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Pane } from \"evergreen-ui\";\r\nimport Search from \"./components/Search\";\r\n\r\nconst App: React.FC<{}> = () => {\r\n  return (\r\n    <Pane width=\"100vw\"  display=\"flex\" flexGrow={1} justifyContent=\"center\">\r\n      <Search />\r\n    </Pane>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}